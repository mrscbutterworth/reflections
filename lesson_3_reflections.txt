When would you want to use a remote repository rather than keeping all your work
local?

    If you need to have others working on your projects.
    Provides backup in case your computer loses its magic smoke.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    So you can experiment.  You may want to branch and play around with something, but not necessarily have it available to everyone who has access to your repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork allows you to copy a repository via GitHub.  It is very similar to a clone, but it is hosted on GitHub's machines.  You would fork if you want to use someone else's work (or your own) as a basis to add to or change that work.
    You can clone a repository from GitHub to your local machine, or clone a repository by simply copying it on your local machine from a different directory.  You would clone when you want to work on a repository on your local machine.
    A branch is only within one repository.  You would use it when you want to make changes to code within the repository without affecting the base code.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    So you can work on it "offline" in a plane or somewhere where you may not necessarily have internet access.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
